<?php

/**
 * @file
 * Contains CouchDBSyncPluginTest.
 */

/**
 * Defines a class for testing CouchDB Sync plugins.
 */
class CouchDBSyncPluginTest extends CouchDBSyncBase {

  /**
   * Name of a valid flattener plugin.
   *
   * @var string
   */
  protected $validPlugin = 'MooTextFlattener';

  /**
   * Name of a invalid flattener plugin.
   *
   * @var string
   */
  protected $invalidPlugin = 'BrokenFlattener';

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Plugin tests',
      'description' => 'Tests the plugin architecture provided by CouchDB Sync.',
      'group' => 'CouchDB Sync',
    );
  }

  /**
   * Test the plugin validity.
   */
  public function testPluginValidity() {
    // Get the list of plugins.
    module_load_include('inc', 'couchdb_sync', 'couchdb_sync.flatteners');
    $plugins = couchdb_sync_get_flattener_plugins();

    // Check the valid plugin is present.
    $this->assertTrue(in_array($this->validPlugin, array_keys($plugins)), t('Valid plugin is present.'));

    // Check the valid plugin is present.
    $this->assertFalse(in_array($this->invalidPlugin, array_keys($plugins)), t('Invalid plugin is not present.'));
  }

  /**
   * Test the functionality of the core field type flatteners.
   */
  public function testCoreFieldFlatteners() {
    // Create a test node.
    $test_node = $this->drupalCreateNode($this->getExampleNodeSettings());

    // Get the flattened version of the test node.
    $flattened_test_node = _couchdb_sync_flatten_entity('node', $test_node);

    // Unset the image styles from the image field. We can't test equality on
    // them due to the random itok value being appended.
    unset($flattened_test_node->field_image['image_styles']);

    // Check each of the fields has been flattened correctly.
    foreach ($this->getExpectedFlatFields() as $field_name => $flat_field) {
      $this->assertEqual($flat_field, $flattened_test_node->{$field_name}, t('Field (@field_name) flattened correctly.', array('@field_name' => $field_name)));
    }
  }

}
